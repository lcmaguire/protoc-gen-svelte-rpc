syntax = "proto3";
package tutorial; 

service ExampleService {
    rpc CreateExample(Example) returns (Example);
    rpc CreateExtra(Extra) returns (Extra);
}

message Example {
    // message view.
    Extra extra = 1;

    // nested message view
    message Nest {
        string info = 1;
        bool active = 2;
        // repeated scalar type
        repeated string tags_category = 3;
        // enum
        Cleanliness clean = 4;
    }
    Nest nest = 2;

    repeated Colour colours = 3;

    // embedded enum
    enum BirdNest {
        BIRD_NEST_UNDEFINED = 0;
        BIRD_NEST_DESTROYED = 1;
        BIRD_NEST_BUILT = 2;
    }
    BirdNest bird_nest = 4;

    // message with oneof
    OperatingSystem os = 5;

    // embedded oneof
    oneof tree {
        string tree_type = 6;
        bool bush = 7;
    }
}

message Extra {
    // string scalar type
    string more = 1;
    // number scalar type
    int32 count = 2;
}

// enum
enum Cleanliness {
    CLEANLINESS_UNSPECIFIED = 0;
    CLEANLINESS_DISGUSTING = 1;
    CLEANLINESS_BAD = 2;
    CLEANLINESS_GOOD = 3;
    CLEANLINESS_EXCELLENT = 4;
}

// external oneof with nested message
message OperatingSystem {
    message LinuxInfo{
        string distro = 1;
        bool arch = 2;
    }
    oneof operating_system {
        int32 windows_version = 1;
        string mac_version = 2;
        LinuxInfo linux_info = 3;
    }
} 

message Colour {
    string colour = 1;
    bool liked = 2;
}